<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pvsoul.eec.yuandong.mapper.PvStringMapper">
  <resultMap id="BaseResultMap" type="com.pvsoul.eec.yuandong.entity.PvString">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="power_station_id" jdbcType="OTHER" property="powerStationId" />
    <result column="inverter_id" jdbcType="OTHER" property="inverterId" />
    <result column="string_no" jdbcType="VARCHAR" property="stringNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pv_index" jdbcType="INTEGER" property="pvIndex" />
    <result column="is_standard" jdbcType="BIT" property="isStandard" />
    <result column="is_valid" jdbcType="BIT" property="isValid" />
    <result column="combiner_box_id" jdbcType="OTHER" property="combinerBoxId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="status_time" jdbcType="TIMESTAMP" property="statusTime" />
    <result column="transformer_id" jdbcType="OTHER" property="transformerId" />
    <result column="cleaning_method" jdbcType="INTEGER" property="cleaningMethod" />
    <result column="last_clean_date" jdbcType="TIMESTAMP" property="lastCleanDate" />
    <result column="support_type" jdbcType="INTEGER" property="supportType" />
    <result column="module_number" jdbcType="INTEGER" property="moduleNumber" />
    <result column="tilt_angle" jdbcType="REAL" property="tiltAngle" />
    <result column="azimuth_angle" jdbcType="REAL" property="azimuthAngle" />
    <result column="dcline_length" jdbcType="REAL" property="dclineLength" />
    <result column="dcline_unit_ohm" jdbcType="REAL" property="dclineUnitOhm" />
  </resultMap>
  <sql id="Base_Column_List">
    id, power_station_id, inverter_id, string_no, create_time, update_time, pv_index, 
    is_standard, is_valid, combiner_box_id, status, status_time, transformer_id, cleaning_method, 
    last_clean_date, support_type, module_number, tilt_angle, azimuth_angle, dcline_length, 
    dcline_unit_ohm
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pv_string
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from pv_string
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.eec.yuandong.entity.PvString">
    insert into pv_string (id, power_station_id, inverter_id, 
      string_no, create_time, update_time, 
      pv_index, is_standard, is_valid, 
      combiner_box_id, status, status_time, 
      transformer_id, cleaning_method, last_clean_date, 
      support_type, module_number, tilt_angle, 
      azimuth_angle, dcline_length, dcline_unit_ohm
      )
    values (#{id,jdbcType=OTHER}, #{powerStationId,jdbcType=OTHER}, #{inverterId,jdbcType=OTHER}, 
      #{stringNo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{pvIndex,jdbcType=INTEGER}, #{isStandard,jdbcType=BIT}, #{isValid,jdbcType=BIT}, 
      #{combinerBoxId,jdbcType=OTHER}, #{status,jdbcType=INTEGER}, #{statusTime,jdbcType=TIMESTAMP}, 
      #{transformerId,jdbcType=OTHER}, #{cleaningMethod,jdbcType=INTEGER}, #{lastCleanDate,jdbcType=TIMESTAMP}, 
      #{supportType,jdbcType=INTEGER}, #{moduleNumber,jdbcType=INTEGER}, #{tiltAngle,jdbcType=REAL}, 
      #{azimuthAngle,jdbcType=REAL}, #{dclineLength,jdbcType=REAL}, #{dclineUnitOhm,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.eec.yuandong.entity.PvString">
    insert into pv_string
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="powerStationId != null">
        power_station_id,
      </if>
      <if test="inverterId != null">
        inverter_id,
      </if>
      <if test="stringNo != null">
        string_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pvIndex != null">
        pv_index,
      </if>
      <if test="isStandard != null">
        is_standard,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="combinerBoxId != null">
        combiner_box_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="statusTime != null">
        status_time,
      </if>
      <if test="transformerId != null">
        transformer_id,
      </if>
      <if test="cleaningMethod != null">
        cleaning_method,
      </if>
      <if test="lastCleanDate != null">
        last_clean_date,
      </if>
      <if test="supportType != null">
        support_type,
      </if>
      <if test="moduleNumber != null">
        module_number,
      </if>
      <if test="tiltAngle != null">
        tilt_angle,
      </if>
      <if test="azimuthAngle != null">
        azimuth_angle,
      </if>
      <if test="dclineLength != null">
        dcline_length,
      </if>
      <if test="dclineUnitOhm != null">
        dcline_unit_ohm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="powerStationId != null">
        #{powerStationId,jdbcType=OTHER},
      </if>
      <if test="inverterId != null">
        #{inverterId,jdbcType=OTHER},
      </if>
      <if test="stringNo != null">
        #{stringNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pvIndex != null">
        #{pvIndex,jdbcType=INTEGER},
      </if>
      <if test="isStandard != null">
        #{isStandard,jdbcType=BIT},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=BIT},
      </if>
      <if test="combinerBoxId != null">
        #{combinerBoxId,jdbcType=OTHER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="statusTime != null">
        #{statusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transformerId != null">
        #{transformerId,jdbcType=OTHER},
      </if>
      <if test="cleaningMethod != null">
        #{cleaningMethod,jdbcType=INTEGER},
      </if>
      <if test="lastCleanDate != null">
        #{lastCleanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="supportType != null">
        #{supportType,jdbcType=INTEGER},
      </if>
      <if test="moduleNumber != null">
        #{moduleNumber,jdbcType=INTEGER},
      </if>
      <if test="tiltAngle != null">
        #{tiltAngle,jdbcType=REAL},
      </if>
      <if test="azimuthAngle != null">
        #{azimuthAngle,jdbcType=REAL},
      </if>
      <if test="dclineLength != null">
        #{dclineLength,jdbcType=REAL},
      </if>
      <if test="dclineUnitOhm != null">
        #{dclineUnitOhm,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.eec.yuandong.entity.PvString">
    update pv_string
    <set>
      <if test="powerStationId != null">
        power_station_id = #{powerStationId,jdbcType=OTHER},
      </if>
      <if test="inverterId != null">
        inverter_id = #{inverterId,jdbcType=OTHER},
      </if>
      <if test="stringNo != null">
        string_no = #{stringNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pvIndex != null">
        pv_index = #{pvIndex,jdbcType=INTEGER},
      </if>
      <if test="isStandard != null">
        is_standard = #{isStandard,jdbcType=BIT},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=BIT},
      </if>
      <if test="combinerBoxId != null">
        combiner_box_id = #{combinerBoxId,jdbcType=OTHER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="statusTime != null">
        status_time = #{statusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transformerId != null">
        transformer_id = #{transformerId,jdbcType=OTHER},
      </if>
      <if test="cleaningMethod != null">
        cleaning_method = #{cleaningMethod,jdbcType=INTEGER},
      </if>
      <if test="lastCleanDate != null">
        last_clean_date = #{lastCleanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="supportType != null">
        support_type = #{supportType,jdbcType=INTEGER},
      </if>
      <if test="moduleNumber != null">
        module_number = #{moduleNumber,jdbcType=INTEGER},
      </if>
      <if test="tiltAngle != null">
        tilt_angle = #{tiltAngle,jdbcType=REAL},
      </if>
      <if test="azimuthAngle != null">
        azimuth_angle = #{azimuthAngle,jdbcType=REAL},
      </if>
      <if test="dclineLength != null">
        dcline_length = #{dclineLength,jdbcType=REAL},
      </if>
      <if test="dclineUnitOhm != null">
        dcline_unit_ohm = #{dclineUnitOhm,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.eec.yuandong.entity.PvString">
    update pv_string
    set power_station_id = #{powerStationId,jdbcType=OTHER},
      inverter_id = #{inverterId,jdbcType=OTHER},
      string_no = #{stringNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pv_index = #{pvIndex,jdbcType=INTEGER},
      is_standard = #{isStandard,jdbcType=BIT},
      is_valid = #{isValid,jdbcType=BIT},
      combiner_box_id = #{combinerBoxId,jdbcType=OTHER},
      status = #{status,jdbcType=INTEGER},
      status_time = #{statusTime,jdbcType=TIMESTAMP},
      transformer_id = #{transformerId,jdbcType=OTHER},
      cleaning_method = #{cleaningMethod,jdbcType=INTEGER},
      last_clean_date = #{lastCleanDate,jdbcType=TIMESTAMP},
      support_type = #{supportType,jdbcType=INTEGER},
      module_number = #{moduleNumber,jdbcType=INTEGER},
      tilt_angle = #{tiltAngle,jdbcType=REAL},
      azimuth_angle = #{azimuthAngle,jdbcType=REAL},
      dcline_length = #{dclineLength,jdbcType=REAL},
      dcline_unit_ohm = #{dclineUnitOhm,jdbcType=REAL}
    where id = #{id,jdbcType=OTHER}
  </update>
  <select id="getDeviceStatusCount" resultType="com.pvsoul.eec.yuandong.dao.DeviceStatusCountDao">
    select
    status,count(1) device_count
    from pv_string
    where is_valid=true
    group by status
  </select>
</mapper>