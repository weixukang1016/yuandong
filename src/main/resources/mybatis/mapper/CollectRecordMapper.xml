<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pvsoul.eec.yuandong.mapper.CollectRecordMapper">
  <resultMap id="BaseResultMap" type="com.pvsoul.eec.yuandong.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="is_realtime" jdbcType="INTEGER" property="isRealtime" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="INTEGER" property="collectorType" />
    <result column="rssi_level" jdbcType="INTEGER" property="rssiLevel" />
    <result column="rssi" jdbcType="INTEGER" property="rssi" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collect_time, is_realtime, collector_ver, collector_type, rssi_level, rssi, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.eec.yuandong.entity.CollectRecord">
    insert into collect_record (id, sn, collect_time, 
      is_realtime, collector_ver, collector_type, 
      rssi_level, rssi, create_time
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{isRealtime,jdbcType=INTEGER}, #{collectorVer,jdbcType=VARCHAR}, #{collectorType,jdbcType=INTEGER}, 
      #{rssiLevel,jdbcType=INTEGER}, #{rssi,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.eec.yuandong.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.eec.yuandong.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.eec.yuandong.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=INTEGER},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=INTEGER},
      rssi_level = #{rssiLevel,jdbcType=INTEGER},
      rssi = #{rssi,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="is_realtime" jdbcType="INTEGER" property="isRealtime" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="INTEGER" property="collectorType" />
    <result column="rssi_level" jdbcType="INTEGER" property="rssiLevel" />
    <result column="rssi" jdbcType="INTEGER" property="rssi" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collect_time, is_realtime, collector_ver, collector_type, rssi_level, rssi, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collect_time, 
      is_realtime, collector_ver, collector_type, 
      rssi_level, rssi, create_time
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{isRealtime,jdbcType=INTEGER}, #{collectorVer,jdbcType=VARCHAR}, #{collectorType,jdbcType=INTEGER}, 
      #{rssiLevel,jdbcType=INTEGER}, #{rssi,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=INTEGER},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=INTEGER},
      rssi_level = #{rssiLevel,jdbcType=INTEGER},
      rssi = #{rssi,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="is_realtime" jdbcType="INTEGER" property="isRealtime" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="INTEGER" property="collectorType" />
    <result column="rssi_level" jdbcType="INTEGER" property="rssiLevel" />
    <result column="rssi" jdbcType="INTEGER" property="rssi" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collect_time, is_realtime, collector_ver, collector_type, rssi_level, rssi, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collect_time, 
      is_realtime, collector_ver, collector_type, 
      rssi_level, rssi, create_time
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{isRealtime,jdbcType=INTEGER}, #{collectorVer,jdbcType=VARCHAR}, #{collectorType,jdbcType=INTEGER}, 
      #{rssiLevel,jdbcType=INTEGER}, #{rssi,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=INTEGER},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=INTEGER},
      rssi_level = #{rssiLevel,jdbcType=INTEGER},
      rssi = #{rssi,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="is_realtime" jdbcType="INTEGER" property="isRealtime" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="INTEGER" property="collectorType" />
    <result column="rssi_level" jdbcType="INTEGER" property="rssiLevel" />
    <result column="rssi" jdbcType="INTEGER" property="rssi" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collect_time, is_realtime, collector_ver, collector_type, rssi_level, rssi, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collect_time, 
      is_realtime, collector_ver, collector_type, 
      rssi_level, rssi, create_time
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{isRealtime,jdbcType=INTEGER}, #{collectorVer,jdbcType=VARCHAR}, #{collectorType,jdbcType=INTEGER}, 
      #{rssiLevel,jdbcType=INTEGER}, #{rssi,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=INTEGER},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=INTEGER},
      rssi_level = #{rssiLevel,jdbcType=INTEGER},
      rssi = #{rssi,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="is_realtime" jdbcType="INTEGER" property="isRealtime" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="INTEGER" property="collectorType" />
    <result column="rssi_level" jdbcType="INTEGER" property="rssiLevel" />
    <result column="rssi" jdbcType="INTEGER" property="rssi" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collect_time, is_realtime, collector_ver, collector_type, rssi_level, rssi, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collect_time, 
      is_realtime, collector_ver, collector_type, 
      rssi_level, rssi, create_time
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{isRealtime,jdbcType=INTEGER}, #{collectorVer,jdbcType=VARCHAR}, #{collectorType,jdbcType=INTEGER}, 
      #{rssiLevel,jdbcType=INTEGER}, #{rssi,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=INTEGER},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=INTEGER},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=INTEGER},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=INTEGER},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=INTEGER},
      rssi_level = #{rssiLevel,jdbcType=INTEGER},
      rssi = #{rssi,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="SMALLINT" property="collectorType" />
    <result column="rssi_level" jdbcType="SMALLINT" property="rssiLevel" />
    <result column="rssi" jdbcType="SMALLINT" property="rssi" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_realtime" jdbcType="SMALLINT" property="isRealtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collector_ver, collector_type, rssi_level, rssi, collect_time, create_time, 
    is_realtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collector_ver, 
      collector_type, rssi_level, rssi, 
      collect_time, create_time, is_realtime
      )
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectorVer,jdbcType=VARCHAR}, 
      #{collectorType,jdbcType=SMALLINT}, #{rssiLevel,jdbcType=SMALLINT}, #{rssi,jdbcType=SMALLINT}, 
      #{collectTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{isRealtime,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isRealtime != null">
        is_realtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=SMALLINT},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=SMALLINT},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=SMALLINT},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        #{isRealtime,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=SMALLINT},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=SMALLINT},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=SMALLINT},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRealtime != null">
        is_realtime = #{isRealtime,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=SMALLINT},
      rssi_level = #{rssiLevel,jdbcType=SMALLINT},
      rssi = #{rssi,jdbcType=SMALLINT},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_realtime = #{isRealtime,jdbcType=SMALLINT}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="collector_ver" jdbcType="VARCHAR" property="collectorVer" />
    <result column="collector_type" jdbcType="SMALLINT" property="collectorType" />
    <result column="rssi_level" jdbcType="SMALLINT" property="rssiLevel" />
    <result column="rssi" jdbcType="SMALLINT" property="rssi" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sn, collector_ver, collector_type, rssi_level, rssi, collect_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_record
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from collect_record
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record (id, sn, collector_ver, 
      collector_type, rssi_level, rssi, 
      collect_time, create_time)
    values (#{id,jdbcType=OTHER}, #{sn,jdbcType=VARCHAR}, #{collectorVer,jdbcType=VARCHAR}, 
      #{collectorType,jdbcType=SMALLINT}, #{rssiLevel,jdbcType=SMALLINT}, #{rssi,jdbcType=SMALLINT}, 
      #{collectTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    insert into collect_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="collectorVer != null">
        collector_ver,
      </if>
      <if test="collectorType != null">
        collector_type,
      </if>
      <if test="rssiLevel != null">
        rssi_level,
      </if>
      <if test="rssi != null">
        rssi,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectorVer != null">
        #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        #{collectorType,jdbcType=SMALLINT},
      </if>
      <if test="rssiLevel != null">
        #{rssiLevel,jdbcType=SMALLINT},
      </if>
      <if test="rssi != null">
        #{rssi,jdbcType=SMALLINT},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="collectorVer != null">
        collector_ver = #{collectorVer,jdbcType=VARCHAR},
      </if>
      <if test="collectorType != null">
        collector_type = #{collectorType,jdbcType=SMALLINT},
      </if>
      <if test="rssiLevel != null">
        rssi_level = #{rssiLevel,jdbcType=SMALLINT},
      </if>
      <if test="rssi != null">
        rssi = #{rssi,jdbcType=SMALLINT},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.CollectRecord">
    update collect_record
    set sn = #{sn,jdbcType=VARCHAR},
      collector_ver = #{collectorVer,jdbcType=VARCHAR},
      collector_type = #{collectorType,jdbcType=SMALLINT},
      rssi_level = #{rssiLevel,jdbcType=SMALLINT},
      rssi = #{rssi,jdbcType=SMALLINT},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
</mapper>